--- src-mods/src/client/ssp/RenderBlocks.java	2013-07-02 19:16:23.719278226 +0600
+++ src-mods/src/client/ssp/RenderBlocks.java	2013-06-21 12:54:31.276078246 +0600
@@ -2795,7 +2882,7 @@
             f4 = 0.0F;
         }
 
-        tessellator.setColorOpaque_F(f2, f3, f4);
+        tessellator.setColorOpaque_F(f * f2, f * f3, f * f4);
         boolean flag = BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 - 1, par3, par4, 1) || !blockAccess.isBlockNormalCube(par2 - 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 - 1, par3 - 1, par4, -1);
         boolean flag1 = BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 + 1, par3, par4, 3) || !blockAccess.isBlockNormalCube(par2 + 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 + 1, par3 - 1, par4, -1);
         boolean flag2 = BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2, par3, par4 - 1, 2) || !blockAccess.isBlockNormalCube(par2, par3, par4 - 1) && BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2, par3 - 1, par4 - 1, -1);
@@ -4264,8 +4395,10 @@
             float f14 = icon1.getInterpolatedV((1.0D - d9) * 16D * 0.5D);
             float f15 = icon1.getInterpolatedV((1.0D - d11) * 16D * 0.5D);
             float f16 = icon1.getInterpolatedV(8D);
-            tessellator.setBrightness(par1Block.getMixedBrightnessForBlock(blockAccess, l, i1, j1));
-            float f17 = 1.0F;
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(par1Block.getMixedBrightnessForBlock(blockAccess, l, i1, j1));
+            }
+            float f17 = Minecraft.oldlighting ? par1Block.getBlockBrightness(blockAccess, par2, par3, par4) : 1.0F;
 
             if (k < 2)
             {
@@ -6512,28 +6693,67 @@
         float f14 = f2 * par7;
         float f15 = f3 * par7;
         float f16 = 0.0625F;
+        float ff4 = 1.0F;
+        float ff5 = 1.0F;
         int i = par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4);
 
         if (renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3 - 1, par4, 0))
         {
-            tessellator.setBrightness(renderMinY <= 0.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 - 1, par4) : i);
-            tessellator.setColorOpaque_F(f4, f8, f12);
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(renderMinY <= 0.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 - 1, par4) : i);
+            }else{
+                ff4 = par1Block.getBlockBrightness(blockAccess, par2, par3, par4);
+                ff5 = par1Block.getBlockBrightness(blockAccess, par2, par3 - 1, par4);
+                if(renderMinY > 0.0D)
+                {
+                    ff5 = f4;
+                }
+                if(Block.lightValue[par1Block.blockID] > 0)
+                {
+                    ff5 = 1.0F;
+                }
+            }
+            tessellator.setColorOpaque_F(f4 * ff5, f8 * ff5, f12 * ff5);
             renderFaceYNeg(par1Block, par2, par3, par4, getBlockIcon(par1Block, blockAccess, par2, par3, par4, 0));
             flag = true;
         }
 
         if (renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3 + 1, par4, 1))
         {
-            tessellator.setBrightness(renderMaxY >= 1.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 + 1, par4) : i);
-            tessellator.setColorOpaque_F(f5, f9, f13);
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(renderMaxY >= 1.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 + 1, par4) : i);
+            }else{
+                ff5 = par1Block.getBlockBrightness(blockAccess, par2, par3 + 1, par4);
+                if(renderMaxY < 1.0D)
+                {
+                    ff5 = ff4;
+                }
+                if(Block.lightValue[par1Block.blockID] > 0)
+                {
+                    ff5 = 1.0F;
+                }
+            }
+            tessellator.setColorOpaque_F(f5 * ff5, f9 * ff5, f13 * ff5);
             renderFaceYPos(par1Block, par2, par3, par4, getBlockIcon(par1Block, blockAccess, par2, par3, par4, 1));
             flag = true;
         }
 
         if (renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3, par4 - 1, 2))
         {
-            tessellator.setBrightness(renderMinZ <= 0.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4 - 1) : i);
-            tessellator.setColorOpaque_F(f6, f10, f14);
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(renderMinZ <= 0.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4 - 1) : i);
+            }else{
+                ff5 = par1Block.getBlockBrightness(blockAccess, par2, par3, par4 - 1);
+                if(renderMinZ > 0.0D)
+                {
+                    ff5 = ff4;
+                }
+                if(Block.lightValue[par1Block.blockID] > 0)
+                {
+                    ff5 = 1.0F;
+                }
+            }
+            tessellator.setColorOpaque_F(f6 * ff5, f10 * ff5, f14 * ff5);
             tessellator.addTranslation(0.0F, 0.0F, f16);
             renderFaceZNeg(par1Block, par2, par3, par4, getBlockIcon(par1Block, blockAccess, par2, par3, par4, 2));
             tessellator.addTranslation(0.0F, 0.0F, -f16);
@@ -6542,8 +6762,20 @@
 
         if (renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3, par4 + 1, 3))
         {
-            tessellator.setBrightness(renderMaxZ >= 1.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4 + 1) : i);
-            tessellator.setColorOpaque_F(f6, f10, f14);
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(renderMaxZ >= 1.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4 + 1) : i);
+            }else{
+                ff5 = par1Block.getBlockBrightness(blockAccess, par2, par3, par4 + 1);
+                if(renderMaxZ < 1.0D)
+                {
+                    ff5 = ff4;
+                }
+                if(Block.lightValue[par1Block.blockID] > 0)
+                {
+                    ff5 = 1.0F;
+                }
+            }
+            tessellator.setColorOpaque_F(f6 * ff5, f10 * ff5, f14 * ff5);
             tessellator.addTranslation(0.0F, 0.0F, -f16);
             renderFaceZPos(par1Block, par2, par3, par4, getBlockIcon(par1Block, blockAccess, par2, par3, par4, 3));
             tessellator.addTranslation(0.0F, 0.0F, f16);
@@ -6552,8 +6784,20 @@
 
         if (renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2 - 1, par3, par4, 4))
         {
-            tessellator.setBrightness(renderMinX <= 0.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2 - 1, par3, par4) : i);
-            tessellator.setColorOpaque_F(f7, f11, f15);
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(renderMinX <= 0.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2 - 1, par3, par4) : i);
+            }else{
+                ff5 = par1Block.getBlockBrightness(blockAccess, par2 - 1, par3, par4);
+                if(renderMinX > 0.0D)
+                {
+                    ff5 = ff4;
+                }
+                if(Block.lightValue[par1Block.blockID] > 0)
+                {
+                    ff5 = 1.0F;
+                }
+            }
+            tessellator.setColorOpaque_F(f7 * ff5, f11 * ff5, f15 * ff5);
             tessellator.addTranslation(f16, 0.0F, 0.0F);
             renderFaceXNeg(par1Block, par2, par3, par4, getBlockIcon(par1Block, blockAccess, par2, par3, par4, 4));
             tessellator.addTranslation(-f16, 0.0F, 0.0F);
@@ -6562,8 +6806,20 @@
 
         if (renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2 + 1, par3, par4, 5))
         {
-            tessellator.setBrightness(renderMaxX >= 1.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2 + 1, par3, par4) : i);
-            tessellator.setColorOpaque_F(f7, f11, f15);
+            if (!Minecraft.oldlighting){
+                tessellator.setBrightness(renderMaxX >= 1.0D ? par1Block.getMixedBrightnessForBlock(blockAccess, par2 + 1, par3, par4) : i);
+            }else{
+                ff5 = par1Block.getBlockBrightness(blockAccess, par2 + 1, par3, par4);
+                if(renderMaxX < 1.0D)
+                {
+                    ff5 = ff4;
+                }
+                if(Block.lightValue[par1Block.blockID] > 0)
+                {
+                    ff5 = 1.0F;
+                }
+            }
+            tessellator.setColorOpaque_F(f7 * ff5, f11 * ff5, f15 * ff5);
             tessellator.addTranslation(-f16, 0.0F, 0.0F);
             renderFaceXPos(par1Block, par2, par3, par4, getBlockIcon(par1Block, blockAccess, par2, par3, par4, 5));
             tessellator.addTranslation(f16, 0.0F, 0.0F);
